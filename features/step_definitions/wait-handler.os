// Реализация шагов BDD-фич/сценариев c помощью фреймворка https://github.com/artbear/1bdd
#Использовать "../.."

Перем БДД; //контекст фреймворка 1bdd

// Метод выдает список шагов, реализованных в данном файле-шагов
Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;

	ВсеШаги = Новый Массив;

	ВсеШаги.Добавить("ЯСоздаюОбработчикОжиданияПроцесса");
	ВсеШаги.Добавить("ЯУстанавливаюОтказВОбработчикОжиданияПроцесса");
	ВсеШаги.Добавить("ЯУстанавливаюОбработчикОжиданияПроцессаКомандыСИнтервалом");
	ВсеШаги.Добавить("СчетчикОбработчикаРавен");

	Возврат ВсеШаги;
КонецФункции

// Реализация шагов

// Процедура выполняется перед запуском каждого сценария
Процедура ПередЗапускомСценария(Знач Узел) Экспорт
	
КонецПроцедуры

// Процедура выполняется после завершения каждого сценария
Процедура ПослеЗапускаСценария(Знач Узел) Экспорт
	
КонецПроцедуры

//Я создаю обработчик ожидания процесса
Процедура ЯСоздаюОбработчикОжиданияПроцесса() Экспорт

	Обработчик = ЗагрузитьСценарий("./features/step_definitions/fixtures/ОбработчикОжиданияПроцесса.os");

	БДД.СохранитьВКонтекст("Обработчик", Обработчик);

КонецПроцедуры

//Я устанавливаю отказ в обработчик ожидая процесса
Процедура ЯУстанавливаюОтказВОбработчикОжиданияПроцесса() Экспорт

	Обработчик = БДД.ПолучитьИзКонтекста("Обработчик");
	Обработчик.УстановитьОтказ();

КонецПроцедуры

//Счетчик обработчика равен "0"
Процедура СчетчикОбработчикаРавен(Знач ЧислоСчетчика) Экспорт

	Обработчик = БДД.ПолучитьИзКонтекста("Обработчик");

	Ожидаем.Что(Обработчик.ПолучитьСчетчик(), "Счетчик должен быть равен").Равно(Число(ЧислоСчетчика));

КонецПроцедуры

//Я устанавливаю обработчик ожидания процесса команды "oscript" с интервалом "1000"
Процедура ЯУстанавливаюОбработчикОжиданияПроцессаКомандыСИнтервалом(Знач ИмяКоманды, Знач Интервал) Экспорт

	Обработчик = БДД.ПолучитьИзКонтекста("Обработчик");
	Команда = ПолучитьКомандуИзКонтекста(ИмяКоманды);
	Команда.УстановитьОбработчикОжидания(Обработчик, Число(Интервал));

КонецПроцедуры

//TODO дубль кода с 1bdd::ВыполнениеКоманд.os
Функция ПолучитьКомандуИзКонтекста(Знач ИмяКоманды)

	КлючКонтекста = КлючКоманды(ИмяКоманды);
	Команда = БДД.ПолучитьИзКонтекста(КлючКонтекста);

	Если Не ЗначениеЗаполнено(Команда) Тогда
		Команда = Новый Команда;
		Команда.УстановитьСтрокуЗапуска(ИмяКоманды);
		БДД.СохранитьВКонтекст(КлючКонтекста, Команда);
	КонецЕсли;
	
	Возврат Команда;
КонецФункции

//TODO дубль кода с 1bdd::ВыполнениеКоманд.os
Функция КлючКоманды(Знач ИмяКоманды)
	Возврат "Команда-" + ИмяКоманды;
КонецФункции
